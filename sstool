#!/bin/env bash

# Ensure dependencies
if ! command -v import &> /dev/null; then
    echo "Error: ImageMagick (import) is not installed."
    exit 1
fi
if ! command -v xdotool &> /dev/null; then
    echo "Error: xdotool is not installed."
    exit 1
fi
if ! command -v xrandr &> /dev/null; then
    echo "Error: xrandr is not installed."
    exit 1
fi
if ! command -v notify-send &> /dev/null; then
    echo "Error: notify-send is not installed."
    exit 1
fi
if ! command -v xclip &> /dev/null; then
    echo "Error: xclip is not installed."
    exit 1
fi

opt="${1}"

SAVE_DIR="${HOME}/Pictures/Screenshots"
mkdir -p "$SAVE_DIR"

timestamp=$(date +"%Y-%m-%d_%H-%M-%S")
filename="${SAVE_DIR}/${timestamp}.png"

function selection() {
    notify-send "Select an area to capture..."
    import "$filename"
    notify-send "Saved to:" "$filename"
    xclip -selection clipboard -t image/png "$filename"
}

function full() {
    notify-send "Capturing full screen..."
    import -window root "$filename"
    notify-send "Saved to:" "$filename"
    xclip -selection clipboard -t image/png "$filename"
}

function window() {
    notify-send "Capturing focused window..."
    win_id=$(xdotool getactivewindow)
    if [ -z "$win_id" ]; then
        notify-send "Error:" "Could not get active window."
        exit 1
    fi
    import -window "$win_id" "$filename"
    notify-send "Saved to:" "$filename"
    xclip -selection clipboard -t image/png "$filename"
}

function screen() {
    notify-send "Capturing active screen containing the focused window..."

    win_id=$(xdotool getactivewindow)
    if [ -z "$win_id" ]; then
        notify-send "Error:" "Could not get active window."
        exit 1
    fi

    # Get window absolute position
    read -r win_x win_y <<< $(xdotool getwindowgeometry --shell "$win_id" | grep -E 'X=|Y=' | sed 's/X=//; s/Y=//' | tr '\n' ' ')

    # Get monitors geometry from xrandr
    monitors=$(xrandr | grep ' connected' | grep -oP '\d+x\d+\+\d+\+\d+')

    monitor_geometry=""
    for mon in $monitors; do
        IFS='x+'
        read -r mon_w mon_h mon_x mon_y <<< "$mon"
        IFS=' '

        if (( win_x >= mon_x && win_x < mon_x + mon_w && win_y >= mon_y && win_y < mon_y + mon_h )); then
            monitor_geometry="${mon_w}x${mon_h}+${mon_x}+${mon_y}"
            break
        fi
    done

    if [ -z "$monitor_geometry" ]; then
        notify-send "Warning:" "Could not detect active monitor, capturing full screen."
        import -window root "$filename"
    else
        import -window root -crop "$monitor_geometry" "$filename"
    fi

    notify-send "Saved to:" "$filename"
    xclip -selection clipboard -t image/png "$filename"
}

function help_menu() {
    cat <<EOF
Usage: $(basename "$0") [OPTION]

Options:
  -h, --help        Show this help message
  -s, --select      Select an area to capture
  -f, --full        Capture full screen
  -w, --window      Capture focused window
EOF
}

case "$opt" in
    --select|-s) selection ;;
    --screen|-sc) screen ;;
    --full|-f) full ;;
    --window|-w) window ;;
    --help|-h) help_menu ;;
    *)
        echo "Error: '${opt:- }' Invalid option."
        help_menu
        exit 1
        ;;
esac
