#!/bin/env bash

# Live preview + audio passthrough with optional recording toggle

# --- CONFIGURATION ---
VIDEO_DEV="/dev/video0"        # video input device
AUDIO_DEV="hw:1"               # ALSA audio input
RESOLUTION="1920x1080"
FRAMERATE="60"
OUTPUT_DIR="$HOME/Videos"
RECORDING=1                    # start recording by default

mkdir -p "$OUTPUT_DIR"

# --- FUNCTIONS ---
function start_ffmpeg() {
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    FILENAME="$OUTPUT_DIR/capture_$TIMESTAMP.mkv"

    if [[ $RECORDING -eq 1 ]]; then
        echo "ðŸŽ¥ Recording ON â†’ $FILENAME"
        ffmpeg -hide_banner -loglevel error \
            -f v4l2 -framerate $FRAMERATE -video_size $RESOLUTION -i "$VIDEO_DEV" \
            -f alsa -i "$AUDIO_DEV" \
            -c:v libx264 -preset ultrafast -tune zerolatency \
            -c:a aac \
            -f tee "[f=matroska]$FILENAME|[f=nut]pipe:1" | ffplay -i pipe:0 -fs -autoexit &
    else
        echo "ðŸŽ¥ Recording OFF â†’ Passthrough only"
        ffmpeg -hide_banner -loglevel error \
            -f v4l2 -framerate $FRAMERATE -video_size $RESOLUTION -i "$VIDEO_DEV" \
            -f alsa -i "$AUDIO_DEV" \
            -c:v rawvideo -pix_fmt yuv420p \
            -c:a pcm_s16le \
            -f nut pipe:1 | ffplay -i pipe:0 -fs -autoexit &
    fi
    FFMPEG_PID=$!
}

function stop_ffmpeg() {
    if [[ ! -z "$FFMPEG_PID" ]]; then
        kill $FFMPEG_PID
        wait $FFMPEG_PID 2>/dev/null
    fi
}

function toggle_recording() {
    stop_ffmpeg
    if [[ $RECORDING -eq 1 ]]; then
        RECORDING=0
    else
        RECORDING=1
    fi
    start_ffmpeg
}

# --- START ---
start_ffmpeg

echo "Controls:"
echo "  r â†’ toggle recording"
echo "  q â†’ quit"

# --- INPUT LOOP ---
while true; do
    read -rsn1 input
    if [[ "$input" == "r" ]]; then
        toggle_recording
    elif [[ "$input" == "q" ]]; then
        stop_ffmpeg
        echo "Exiting..."
        exit 0
    fi
done
