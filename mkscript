#!/bin/env bash

set -euo pipefail

SCRIPTS_DIR="$HOME/Scripts"
mkdir -p "$SCRIPTS_DIR"

# Get script name from arg or prompt
script_name="${1:-}"
if [[ -z "$script_name" ]]; then
    read -rp "File Name: " script_name
    [[ -z "$script_name" ]] && {
        echo "Error: No filename provided."
        exit 1
    }
fi

file_path="$SCRIPTS_DIR/$script_name"

# Check if file exists
if [[ -e "$file_path" ]]; then
    echo "Opening existing script: $file_path"
else
    echo "Creating new script: $file_path"

    # Create file with boilerplate
    cat << 'EOF' > "$file_path"
#!/bin/env bash

set -euo pipefail

opt="\${1:-}"

function help_menu() {
    cat << EOM

Usage: \$(basename "\$0") [OPTION]

Options:
  -h, --help        Show this help message

EOM
}

case "\$opt" in
    -h|--help)
        help_menu
        ;;
    *)
        echo "Error: '\${opt:- }' Invalid option."
        help_menu
        exit 1
        ;;
esac
EOF
    # Remove all backslashes/EOM from the generated file
    sed -i 's/\\//g' "$file_path"
    sed -i 's/\bEOM\b/EOF/g' "$file_path"

    # Make file executable
    chmod +x "$file_path"
fi

# Open in $EDITOR
${EDITOR:-vim} "$file_path"
