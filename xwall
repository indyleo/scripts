#!/bin/env bash

set -euo pipefail

opt="${1:-}"
dir="${2:-}"
time="${3:-900}"

function timexwalr() {
    local WALLPAPER_DIR="$dir"
    local INTERVAL="$time"

    # Ensure directory argument
    if [[ -z "$WALLPAPER_DIR" ]]; then
        echo "Error: No wallpaper directory provided."
        exit 1
    fi

    # Check if the directory exists
    if [[ ! -d "$WALLPAPER_DIR" ]]; then
        echo "Error: Directory does not exist: $WALLPAPER_DIR"
        exit 1
    fi

    # Get all connected monitors
    local MONITORS=($(xrandr | grep " connected" | cut -d ' ' -f1))

    # Set wallpaper immediately at startup
    for monitor in "${MONITORS[@]}"; do
        local wp=$(find "$WALLPAPER_DIR" -type f \( -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.png' -o -iname '*.gif' \) | shuf -n 1)
        xwallpaper --output "$monitor" --stretch "$wp"
        echo "Wallpaper set on $monitor to $wp"
    done

    # Then loop forever, changing every 15 minutes or as specified
    while true; do
        sleep "$INTERVAL"

        for monitor in "${MONITORS[@]}"; do
            local wp=$(find "$WALLPAPER_DIR" -type f \( -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.png' -o -iname '*.gif' \) | shuf -n 1)
            xwallpaper --output "$monitor" --stretch "$wp"
            echo "Wallpaper changed on $monitor to $wp"
        done
    done
}

function xwalr() {
    local WALLPAPER_DIR="$dir"

    # Ensure a directory argument is provided
    if [[ -z "$WALLPAPER_DIR" ]]; then
        echo "Error: $0: No wallpaper directory provided."
        exit 1
    fi

    # Check if the directory exists
    if [[ ! -d "$WALLPAPER_DIR" ]]; then
        echo "Error: Directory does not exist: $WALLPAPER_DIR"
        exit 1
    fi

    # Get all connected monitors
    local MONITORS=($(xrandr | grep " connected" | cut -d ' ' -f1))

    # For each monitor, set a random wallpaper
    for monitor in "${MONITORS[@]}"; do
        local wp=$(find "$WALLPAPER_DIR" -type f \( -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.png' -o -iname '*.gif' \) | shuf -n 1)
        if [[ -n "$wp" ]]; then
            xwallpaper --output "$monitor" --stretch "$wp"
            echo "Wallpaper set on $monitor to $wp"
        else
            echo "Error: No wallpaper found in $WALLPAPER_DIR"
        fi
    done
}

function help_menu() {
    cat <<EOF
Usage: $(basename "$0") [OPTION]

Options:
  -h, --help                       Show this help message
  timexwalr \${dir} \${time}       Change wallpaper every INTERVAL seconds randomly, on all connected displays.
  xwalr \${dir}                    Set a random wallpaper on all connected displays.
EOF
}

# Main program
case "$opt" in
    timexwalr)
        timexwalr "${dir}" "${time}"
        ;;
    xwalr)
        xwalr "${dir}"
        ;;
    --help|-h)
        help_menu
        ;;
    *)
        echo "Error: '${opt:- }' Invalid option."
        help_menu
        exit 1
        ;;
esac
