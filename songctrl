#!/bin/env bash

set -euo pipefail

opt="${1:-}"
player="${2:-Supersonic}"
cutpoint="${3:-0}"
cmd="pkill -RTMIN+13 slstatus"

song_togglepause(){
    playerctl play-pause --player="$player"
    $cmd
}

song_skip(){
    playerctl next --player="$player"
    $cmd
}

song_previous(){
    playerctl previous --player="$player"
    $cmd
}

song_title(){
    status=$(playerctl status --player="$player" 2>/dev/null)

    if [ "$status" = "Playing" ]; then
        title=$(playerctl metadata title --player="$player")

        if [[ -n "$cutpoint" ]]; then
            if (( ${#title} > cutpoint )); then
                # Cut at nearest space before cutpoint
                truncated=$(echo "$title" | cut -c 1-"$cutpoint")
                clean_cut=$(echo "$truncated" | awk '{ for (i=1;i<=NF;i++) { if (length(s $i) + 1 <= '$cutpoint') s = s $i " "; else break } print s }' | sed 's/ *$//')
                echo "$clean_cut ..."
            else
                echo "$title"
            fi
        else
            echo "$title"
        fi
    else
        echo "Not Playing/Paused"
    fi
    $cmd
}

song_state(){
    status=$(playerctl status --player="$player" 2>/dev/null)
    case "$status" in
        Playing)
            echo " "
            ;;
        Paused)
            echo " "
            ;;
        Stopped)
            echo " "
            ;;
        *)
            if ! flatpak ps | awk '{print $3}' | grep -Fxq "io.github.dweymouth.supersonic"; then
                echo " "
            else
                echo "  "
            fi
            ;;
    esac
    $cmd
}

function help_menu() {
    cat <<EOF
Usage: $(basename "$0") [OPTION]

Options:
    --help, -h              Show this help message
    --togglepause, -tp      Toggle pause
    --skip, -s              Skip song
    --previous, -p          Previous song
    --songtitle, -st        Show song title
    --songstate, -ss        Show song state
EOF
}

case "$opt" in
    --togglepause|-tp)
        song_togglepause ;;
    --skip|-s)
        song_skip ;;
    --previous|-p)
        song_previous ;;
    --songtitle|-st)
        song_title ;;
    --songstate|-ss)
        song_state ;;
    --help|-h)
        help_menu ;;
    *)
        echo "Error: '${opt:- }' Invalid option."
        help_menu
        exit 1 ;;
esac
