#!/bin/env bash

set -euo pipefail

function command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Check if dependencies are there
for deps in xdotool xdo slock loginctl; do
    if ! command_exists "$deps"; then
        notify-send "wmc: $deps is not installed"
        exit 1
    fi
done

# Source utils
[[ -f "${XDG_SCRIPTS_HOME:-$HOME/.local/scripts}/utils" ]] && \
    source "${XDG_SCRIPTS_HOME:-$HOME/.local/scripts}/utils"

opt="${1:-}"

function killwindowx() {
    if command_exists xdotool; then
        windowid=$(xdotool getactivewindow 2>/dev/null)
        if [[ -n "$windowid" ]]; then
            xdotool windowkill "$windowid"
        else
            notify-send "killwindowx: No active window detected (xdotool)"
        fi
    elif command_exists xdo; then
        windowid=$(xdo id 2>/dev/null)
        if [[ -n "$windowid" ]]; then
            xdo kill "$windowid"
        else
            notify-send "killwindowx: No active window detected (xdo)"
        fi
    else
        notify-send "killwindowx: No suitable tool (xdotool/xdo) found"
    fi
}

function logoutx() {
    notify-send "Logging out..."
    loginctl terminate-user "$USER"
}

function restartx() {
    # Only handle dwm restarts
    if [[ "${WM:-}" != "dwm" ]]; then
        notify-send "restartx: current WM (${WM:-unknown}) is not dwm"
        return 1
    fi

    # Restart dwm
    pkill -x dwm

    # Restart the status bar, if recognized
    case "${STATUSBAR:-}" in
        dwmblocks)
            command -v dwmblocks >/dev/null && dwmblocks & disown
            ;;
        slstatus)
            pkill -x slstatus
            command -v slstatus >/dev/null && slstatus & disown
            ;;
        "")
            notify-send "restartx: no known status bar found"
            ;;
        *)
            notify-send "restartx: unknown STATUSBAR: ${STATUSBAR}"
            ;;
    esac
}

function lockx() {
    if command -v slock >/dev/null 2>&1; then
        slock & disown
    else
        notify-send "lockx: 'slock' is not installed"
    fi
}

function help_menu() {
    cat << EOF

Usage: $(basename "$0") [OPTION]

Options:
  -h, --help        Show this help message
  killwindow, xkill, -k        Kill the active window
  logout, exit, -lo            Logout the user
  restartwm, restart, -r       Restart the WM
  lock, -l                     Lock the screen

EOF
}

case "$opt" in
    -h|--help)
        help_menu
        ;;
    killwindow|xkill|-k)
        killwindowx
        ;;
    logout|exit|-lo)
        logoutx
        ;;
    restartwm|restart|-r)
        restartx
        ;;
    lock|-l)
        lockx
        ;;
    *)
        echo "Error: '${opt:- }' Invalid option."
        help_menu
        exit 1
        ;;
esac
