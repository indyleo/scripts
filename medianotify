#!/bin/env bash
# medianotify (song + browser, auto-reconnect)

set -euo pipefail

TMPDIR="${XDG_RUNTIME_DIR:-/tmp}/media-notify"
mkdir -p "$TMPDIR"
ICON_FALLBACK="/usr/share/icons/hicolor/64x64/apps/multimedia-player.png"

# ---- Configurable ----
SONG_PLAYERS=("SubsonicTUI")
BROWSER_PLAYERS=("firefox" "chromium" "brave" "google-chrome")
# -----------------------

function notify_song() {
    local title="$1"
    local artist="$2"
    local album="$3"
    local arturl="$4"

    local body=""
    [ -n "$artist" ] && body="$artist"
    [ -n "$album" ] && body="${body}${body:+ â€” }$album"

    local icon_path="$ICON_FALLBACK"

    if [ -n "$arturl" ]; then
        arturl="${arturl#file://}"
        local fname
        fname="$(echo "$arturl" | sed 's/[^a-zA-Z0-9._-]/_/g')"
        icon_path="$TMPDIR/$fname"

        if [[ "$arturl" =~ ^https?:// ]]; then
            curl -s -L --fail "$arturl" -o "$icon_path" || icon_path="$ICON_FALLBACK"
        elif [ -f "$arturl" ]; then
            cp "$arturl" "$icon_path" || icon_path="$ICON_FALLBACK"
        fi
    fi

    notify-send "$title" "$body" --icon="$icon_path"
}

function find_player() {
    local -n list=$1
    local active
    active=$(playerctl -l 2>/dev/null || true)
    for p in "${list[@]}"; do
        match=$(echo "$active" | grep -i "^$p" | head -n1 || true)
        if [[ -n "$match" ]]; then
            echo "$match"
            return 0
        fi
    done
    return 1
}

function wait_for_player() {
    local listname="$1"
    local notify_on_fail="${2:-false}"
    local player=""

    while true; do
        player=$(find_player "$listname" || true)
        if [[ -n "$player" ]]; then
            echo "$player"
            return 0
        fi
        if [[ "$notify_on_fail" == true ]]; then
            notify-send "No player found" "Waiting for ${listname[*]}..."
            notify_on_fail=false
        fi
        sleep 1
    done
}

function watch_player() {
    local listname="$1"
    local type="$2"
    local last_title=""

    while true; do
        player=$(wait_for_player "$listname" true)
        echo "ðŸŽ§ Connected to $type player: $player"

        while true; do
            title=$(playerctl -p "$player" metadata title 2>/dev/null || echo "")
            artist=$(playerctl -p "$player" metadata artist 2>/dev/null || echo "")
            album=$(playerctl -p "$player" metadata album 2>/dev/null || echo "")
            arturl=$(playerctl -p "$player" metadata mpris:artUrl 2>/dev/null || echo "")

            if [[ "$type" == "song" ]]; then
                restatus rt 22
            elif [[ "$type" == "browser" ]]; then
                restatus rt 21
            fi

            if [[ -n "$title" && "$title" != "$last_title" ]]; then
                notify_song "$title" "$artist" "$album" "$arturl"
                last_title="$title"
            fi

            sleep 1
        done
    done
}

# ---- Argument handling ----
mode="${1:-both}"

case "$mode" in
    song)
        watch_player SONG_PLAYERS "song"
        ;;
    browser)
        watch_player BROWSER_PLAYERS "browser"
        ;;
    both)
        watch_player SONG_PLAYERS "song" &
        watch_player BROWSER_PLAYERS "browser" &
        wait
        ;;
    *)
        echo "Usage: $(basename "$0") [song|browser|both]"
        exit 1
        ;;
esac
